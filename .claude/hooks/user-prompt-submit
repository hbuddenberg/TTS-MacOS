#!/bin/bash
# Hook de envío de prompt: Lee el prompt del usuario antes de procesarlo
# Útil para confirmar que Claude recibió el mensaje

# Configuración
VOICE="${TTS_PROMPT_VOICE:-jorge}"     # Voz diferente para prompts del usuario
RATE="${TTS_PROMPT_RATE:-200}"         # Velocidad más rápida para prompts
ENABLED="${TTS_PROMPT_ENABLED:-false}" # Deshabilitado por defecto

# Salir si está deshabilitado
if [ "$ENABLED" != "true" ]; then
    exit 0
fi

# Leer el prompt desde stdin
PROMPT=$(cat)

# Anuncio breve
ANNOUNCEMENT="Procesando tu solicitud"

# Función para buscar voz en el sistema
find_voice() {
    local voice_query="$1"

    # Búsqueda exacta primero (case-insensitive)
    local exact_match=$(say -v ? | grep -i "^${voice_query} " | head -1 | awk '{print $1}')
    if [ -n "$exact_match" ]; then
        echo "$exact_match"
        return 0
    fi

    # Búsqueda parcial (para voces como "Siri Female", "Siri Male")
    local partial_match=$(say -v ? | grep -i "$voice_query" | head -1 | awk '{print $1}')
    if [ -n "$partial_match" ]; then
        echo "$partial_match"
        return 0
    fi

    # Fallback: buscar cualquier voz en español
    local spanish_voice=$(say -v ? | grep -iE "(spanish|español)" | head -1 | awk '{print $1}')
    if [ -n "$spanish_voice" ]; then
        echo "$spanish_voice"
        return 0
    fi

    # Último fallback: Jorge o primera voz disponible
    echo "Jorge"
}

# Buscar la voz en el sistema
VOICE_NAME=$(find_voice "$VOICE")

# Reproducir usando TTS-macOS CLI (si está instalado)
if command -v tts-macos &> /dev/null; then
    tts-macos "$ANNOUNCEMENT" --voice "$(echo "$VOICE_NAME" | tr '[:upper:]' '[:lower:]')" --rate "$RATE" 2>/dev/null &
    exit 0
fi

# Fallback: usar say directamente
say -v "$VOICE_NAME" -r "$RATE" "$ANNOUNCEMENT" 2>/dev/null &

exit 0
